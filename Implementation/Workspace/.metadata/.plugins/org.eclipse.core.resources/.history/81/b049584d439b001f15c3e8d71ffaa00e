package rmi.server;
import java.io.BufferedInputStream;
import java.io.DataInputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;

/**
 * Used to retrieve server options from a textfile such as RMI binding
 * address and the maximum history size of the client and pass the values
 * onto the calling method
 * 
 * @author Jamie Brindle (06352322), Enterprise Programming, Msc Advanced Computing
 *
 */
public class ServerOptions {
	private String[] input;
	private String address, maxHistory, fileLocation, url, database, user, password;
	private int maxHistoryInt;

	@SuppressWarnings("deprecation")	
	/**
	 * serverOptions class constructor.
	 * Also used to retrieve the server options data from the text file in order
	 * to be passed on via the appropriate getters
	 *
	 */
	public ServerOptions() {
		input = new String[20];
		fileLocation="serverOptions.txt";

		maxHistory = "";
		maxHistoryInt = 0;

		File file = new File(fileLocation);
		FileInputStream fis = null;
		BufferedInputStream bis = null;
		DataInputStream dis = null;

		try {
			fis = new FileInputStream(file);
			bis = new BufferedInputStream(fis);
			dis = new DataInputStream(bis);

			for (int n = 0; dis.available() != 0; n++) {
				input[n] = dis.readLine();        	
			}

			address = input[3].toString();
			maxHistory = input[6].toString();
			maxHistoryInt = Integer.parseInt(maxHistory);
			url = input[9].toString();
			database = input[12].toString();
			user = input[15].toString();
			password = input[18].toString();

			fis.close();
			bis.close();
			dis.close();

		} catch (FileNotFoundException e) {
			e.printStackTrace();
		} catch (IOException e) {
			e.printStackTrace();
		}	
	}

	/**
	 * Used to pass on the RMI binding address
	 * @return address - the RMI bind address
	 *
	 */
	public String getBindingAddress() {
		return address;        
	}

	/**
	 * Used to pass the maximum history size in lines
	 * @return maxHistoryInt - the amount of history in lines we want to store
	 *
	 */
	public int getMaxHistorySize() {
		return maxHistoryInt;
	}

	/**
	 * Used to pass on the JDCB host url address
	 * @return url - The JDBC host address and database name
	 *
	 */
	public String getUrl() {
		url = url + database;
		return url;
	}

	/**
	 * Used to pass on the username of the mysql database
	 * @return user - the username of the database
	 *
	 */
	public String getUser() {
		return user;
	}

	/**
	 * Used to pass on the password of the mysql database
	 * @return password - the password of the database
	 *
	 */
	public String getPassword() {
		return password;
	}	
}

