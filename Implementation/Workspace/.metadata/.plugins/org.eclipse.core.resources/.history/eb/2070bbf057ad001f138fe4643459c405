

import java.io.BufferedInputStream;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.DataInputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.util.ArrayList;

public class InOutEmails {
	
	
	private ArrayList<String> emailList;
	protected String readFileLoc = "scan.txt";
	
	public InOutEmails() {
		
		emailList = new ArrayList<String>(); 
	}

	public void processEmails() {

     	File file = new File(readFileLoc);
		FileInputStream fis = null;
		InputStreamReader in = null;
		BufferedReader bis = null;

		try {
			fis = new FileInputStream(file);
			in = new InputStreamReader(fis, "UTF-16");
			br = new BufferedReader(in, 8 * 1024);
				
			while (bis.readLine() != null) {
				
			    emailList.add (br.readLine());
			}

		} catch (FileNotFoundException e) {
			System.out.println("Problem loading file - File missing");

		} catch (IOException e) {
			System.out.println("Problem loading file - Possibly corrupt");
		} finally {
			try {
				fis.close();
				bis.close();
				in.close();
			} catch (IOException e) {
				e.printStackTrace();
			}
		}
	}

	public void exportFile() {
		
		File file  = new File("output1.txt");
		FileOutputStream fos = null;
		OutputStreamWriter out = null;
		BufferedWriter bor
		
		
		BufferedWriter fo;
		try {
			fo = new BufferedWriter(new FileWriter(textFileLocation));

			for (int i = 0; i < input.length; i++) {
				fo.write(input[i]);
				fo.newLine();
			}

			fo.flush();
			fo.close();

			status = "RMI hosting location change successful";

		} catch (IOException e) {
			status = "RMI hosting location change unsuccessful - please check ServerOptions.txt";
		}
	}

	public String getStatus() {
		return status;
	}

	public void changeRMILocation(String newUrl) {
		input[3] = newUrl;
		exportFile();

	}
}
