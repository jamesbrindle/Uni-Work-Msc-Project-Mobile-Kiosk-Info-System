package sik.pannels;

import java.awt.Color;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.Insets;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.FocusEvent;
import java.awt.event.FocusListener;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.io.Serializable;
import java.net.MalformedURLException;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;

import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JPasswordField;
import javax.swing.JTextField;

import sik.client.MainDisplayGUI;

public class ManPinEntryPanel extends JPanel implements ActionListener,
		KeyListener, FocusListener, Serializable {

	private static final long serialVersionUID = 1L;

	private MainDisplayGUI mainGUI;
	private NumPadPanel numPad;

	private JPanel manPinEntryPanelNorth, manPinEntryPanelEast,
			manPinEntryPanelWest, manPinEntryPanelSouth;

	private GridBagConstraints manPinEntryDisplayLayout,
			manPinEntryLayoutNorth, manPinEntryLayoutEast,
			manPinEntryLayoutWest, manPinEntryLayoutSouth;

	private JLabel manPinEntryMessage, studentIDLabel, pinNoLabel,
			errorMessage;
	private JTextField studentIDTextField;
	private JPasswordField pinNoTextField;

	ActionListener actionListener;

	public ManPinEntryPanel(MainDisplayGUI mainGUI) {

		this.mainGUI = mainGUI;

		setLayout(new GridBagLayout());
		setOpaque(false);
		manPinEntryDisplayLayout = new GridBagConstraints();

		manPinEntryPanelNorth = new JPanel(new GridBagLayout());
		manPinEntryPanelNorth.setOpaque(false);
		manPinEntryLayoutNorth = new GridBagConstraints();

		manPinEntryMessage = new JLabel(
				"Please Enter Your Student ID and Pin Number");
		manPinEntryMessage.setFont(mainGUI.extraLargeFont);
		manPinEntryMessage.setForeground(new Color(255, 255, 255));
		manPinEntryPanelNorth.add(manPinEntryMessage, manPinEntryLayoutNorth);

		manPinEntryDisplayLayout.insets = new Insets(40, 40, 40, 40);

		manPinEntryDisplayLayout.gridwidth = 2;
		manPinEntryDisplayLayout.gridy = 0;
		add(manPinEntryPanelNorth, manPinEntryDisplayLayout);

		// east

		manPinEntryPanelEast = new JPanel(new GridBagLayout());
		manPinEntryPanelEast.setOpaque(false);
		manPinEntryLayoutEast = new GridBagConstraints();

		manPinEntryLayoutEast.insets = new Insets(2, 5, 2, 5);
		manPinEntryLayoutEast.anchor = GridBagConstraints.WEST;
		manPinEntryLayoutEast.gridy = 0;

		studentIDLabel = new JLabel("Student ID");
		studentIDLabel.setFont(mainGUI.largerFont);
		studentIDLabel.setForeground(new Color(255, 255, 255));
		studentIDTextField = new JTextField(15);
		studentIDTextField.addFocusListener(this);
		studentIDTextField.setFont(mainGUI.largerFont);

		manPinEntryPanelEast.add(studentIDLabel, manPinEntryLayoutEast);
		manPinEntryPanelEast.add(studentIDTextField, manPinEntryLayoutEast);

		manPinEntryLayoutEast.gridy = 1;

		pinNoLabel = new JLabel("Pin Numebr");
		pinNoLabel.setFont(mainGUI.largerFont);
		pinNoLabel.setForeground(new Color(255, 255, 255));

		pinNoTextField = new JPasswordField(15);
		pinNoTextField.addFocusListener(this);
		pinNoTextField.setFont(mainGUI.largerFont);

		manPinEntryPanelEast.add(pinNoLabel, manPinEntryLayoutEast);
		manPinEntryPanelEast.add(pinNoTextField, manPinEntryLayoutEast);

		manPinEntryDisplayLayout.gridwidth = 1;
		manPinEntryDisplayLayout.gridy = 1;
		add(manPinEntryPanelEast, manPinEntryDisplayLayout);

		// west - num pad

		manPinEntryDisplayLayout.gridx = 1;
		manPinEntryDisplayLayout.gridy = 1;

		manPinEntryPanelWest = new JPanel(new GridBagLayout());
		manPinEntryPanelWest.setOpaque(false);
		manPinEntryLayoutWest = new GridBagConstraints();

		numPad = new NumPadPanel(this, mainGUI.largerFont, studentIDTextField);
		addExtraNumPadActionListeners();

		manPinEntryPanelWest.add(numPad, manPinEntryLayoutWest);

		add(manPinEntryPanelWest, manPinEntryDisplayLayout);

		// south

		manPinEntryPanelSouth = new JPanel(new GridBagLayout());
		manPinEntryPanelSouth.setOpaque(false);
		manPinEntryLayoutSouth = new GridBagConstraints();

		errorMessage = new JLabel("Your Pin Number Should Be 4 Digits Long");
		errorMessage.setFont(mainGUI.largerFont);
		errorMessage.setForeground(new Color(255, 255, 255));

		manPinEntryPanelSouth.add(errorMessage, manPinEntryLayoutSouth);

		manPinEntryDisplayLayout.gridwidth = 2;
		manPinEntryDisplayLayout.gridy = 3;
		manPinEntryDisplayLayout.gridx = 0;

		add(manPinEntryPanelSouth, manPinEntryDisplayLayout);

	}

	public void addExtraNumPadActionListeners() {
		numPad.numCancel.addActionListener(this);
		numPad.numEnter.addActionListener(this);
		numPad.numClear.addActionListener(this);
	}

	public void focusGained(FocusEvent e) {
		if (e.getSource() == studentIDTextField) {
			numPad.setFocusedObject(studentIDTextField);
		}
		if (e.getSource() == pinNoTextField) {
			numPad.setFocusedObject(pinNoTextField);
		}
	}

	public void clearTextFields() {
		studentIDTextField.setText("");
		pinNoTextField.setText("");
	}

	@SuppressWarnings("deprecation")
	public void actionPerformed(ActionEvent e) {

		if (e.getSource() == numPad.numClear) {
			clearTextFields();
		}

		if (e.getSource() == numPad.numCancel) {
			mainGUI.mainDisplayPanel.remove(this);
			mainGUI.frame.repaint();
			mainGUI.loadIntroPanel();
			mainGUI.frame.pack();
		}

		if (e.getSource() == numPad.numEnter) {
			if (pinNoTextField.getText().equalsIgnoreCase("")
					|| pinNoTextField.getText().isEmpty()) {

				errorMessage.setText("Please enter a valid pin number");
			} else if (studentIDTextField.getText().equalsIgnoreCase("")
					|| studentIDTextField.getText().isEmpty()) {
				errorMessage.setText("Please enter a valid student ID number");
			} else {
				try {
					mainGUI.rmiClient.connectToServer();

					try {
						mainGUI.rmiClient.loadStudentRecord(studentIDTextField
								.getText());

						if (mainGUI.rmiClient.operationMessage
								.equalsIgnoreCase("nullPointer")) {
							errorMessage
									.setText("Student ID invalid. Please try again");
							mainGUI.rmiClient.operationMessage="";
						} else {

							if (mainGUI.rmiClient.studentRecord.gettPinNo()
									.equalsIgnoreCase(pinNoTextField.getText())) {
								clearTextFields();
								mainGUI.mainDisplayPanel.remove(this);
								mainGUI.frame.repaint();
								mainGUI.loadHomePanel();
								mainGUI.frame.pack();
							} else {
								errorMessage
										.setText("Invalid pin number, please try again");
								pinNoTextField.setText("");
							}
						}

					} catch (RemoteException e1) {
						clearTextFields();
						errorMessage
								.setText("Student ID invalid. Please try again");
						e1.printStackTrace();
					}
				} catch (RemoteException e2) {
					errorMessage
							.setText("Connection failure, please try again later");
					clearTextFields();
					e2.printStackTrace();
				} catch (MalformedURLException e2) {
					errorMessage
							.setText("Connection failure, please try again later");
					clearTextFields();
					e2.printStackTrace();
				} catch (NotBoundException e2) {
					errorMessage
							.setText("Connection failure, please try again later");
					clearTextFields();
					e2.printStackTrace();
				}
			}
		}
	}

	public void keyTyped(KeyEvent e) {
	}

	public void keyPressed(KeyEvent e) {
	}

	public void keyReleased(KeyEvent e) {
	}

	public void focusLost(FocusEvent e) {
	}
}
