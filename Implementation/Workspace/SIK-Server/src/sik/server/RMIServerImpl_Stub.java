// Stub class generated by rmic, do not edit.
// Contents subject to change without notice.

package sik.server;

public final class RMIServerImpl_Stub
    extends java.rmi.server.RemoteStub
    implements sik.common.RMIServer, java.rmi.Remote
{
    private static final long serialVersionUID = 2;
    
    private static java.lang.reflect.Method $method_dispatchMessage_0;
    private static java.lang.reflect.Method $method_getStore_1;
    private static java.lang.reflect.Method $method_getStore_silent_2;
    private static java.lang.reflect.Method $method_getStudentRecord_3;
    private static java.lang.reflect.Method $method_saveStore_4;
    
    static {
	try {
	    $method_dispatchMessage_0 = sik.common.RMIServer.class.getMethod("dispatchMessage", new java.lang.Class[] {java.lang.String.class});
	    $method_getStore_1 = sik.common.RMIServer.class.getMethod("getStore", new java.lang.Class[] {java.lang.String.class});
	    $method_getStore_silent_2 = sik.common.RMIServer.class.getMethod("getStore_silent", new java.lang.Class[] {});
	    $method_getStudentRecord_3 = sik.common.RMIServer.class.getMethod("getStudentRecord", new java.lang.Class[] {java.lang.String.class, java.lang.String.class, boolean.class});
	    $method_saveStore_4 = sik.common.RMIServer.class.getMethod("saveStore", new java.lang.Class[] {sik.common.Store.class, java.lang.String.class});
	} catch (java.lang.NoSuchMethodException e) {
	    throw new java.lang.NoSuchMethodError(
		"stub class initialization failed");
	}
    }
    
    // constructors
    public RMIServerImpl_Stub(java.rmi.server.RemoteRef ref) {
	super(ref);
    }
    
    // methods from remote interfaces
    
    // implementation of dispatchMessage(String)
    public void dispatchMessage(java.lang.String $param_String_1)
	throws java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_dispatchMessage_0, new java.lang.Object[] {$param_String_1}, -6305745366237898235L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of getStore(String)
    public sik.common.Store getStore(java.lang.String $param_String_1)
	throws java.rmi.RemoteException
    {
	try {
	    Object $result = ref.invoke(this, $method_getStore_1, new java.lang.Object[] {$param_String_1}, -1057897912414377083L);
	    return ((sik.common.Store) $result);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of getStore_silent()
    public sik.common.Store getStore_silent()
	throws java.rmi.RemoteException
    {
	try {
	    Object $result = ref.invoke(this, $method_getStore_silent_2, null, 4511223524310732782L);
	    return ((sik.common.Store) $result);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of getStudentRecord(String, String, boolean)
    public sik.common.StudentRecord getStudentRecord(java.lang.String $param_String_1, java.lang.String $param_String_2, boolean $param_boolean_3)
	throws java.rmi.RemoteException
    {
	try {
	    Object $result = ref.invoke(this, $method_getStudentRecord_3, new java.lang.Object[] {$param_String_1, $param_String_2, ($param_boolean_3 ? java.lang.Boolean.TRUE : java.lang.Boolean.FALSE)}, -4594619434262575760L);
	    return ((sik.common.StudentRecord) $result);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of saveStore(Store, String)
    public void saveStore(sik.common.Store $param_Store_1, java.lang.String $param_String_2)
	throws java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_saveStore_4, new java.lang.Object[] {$param_Store_1, $param_String_2}, -7917719978222855751L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
}
